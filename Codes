
✅ For Sorted Array: Use Two-Pointer Technique
Time Complexity: O(n)
Space Complexity: O(1)


public static void findPairsSorted(int[] arr, int targetSum) {
    int left = 0, right = arr.length - 1;

    while (left < right) {
        int sum = arr[left] + arr[right];
        if (sum == targetSum) {
            System.out.println("(" + arr[left] + ", " + arr[right] + ")");
            left++;
            right--;
        } else if (sum < targetSum) {
            left++;
        } else {
            right--;
        }
    }
}
------------------------------------------------------------
✅ Binary Search : Iterative approch
Time Complexity: O(logn)
Space Complexity: O(logn)

public int binarySearch(int[] arr, int target) {
    int low = 0, high = arr.length - 1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (arr[mid] == target)
            return mid;
        else if (arr[mid] < target)
            low = mid + 1;
        else
            high = mid - 1;
    }
    return -1; // Not found
}

